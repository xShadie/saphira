local arg = get_server_timer_arg ( ) 
if d . find ( arg ) then 
local s = d . getf ( arg , "step" ) 
if s == 1 then 
local sec = d . getf ( arg , "second" ) 
if sec == 0 then 
clear_server_timer ( "hydra_zone_check" , arg ) 
d . setf ( arg , "step" , 2 ) 
d . setf ( arg , "second" , 149 ) 
d . notice ( arg , 1238 , "" , true ) 
hydra_zone . purgedoors ( arg , 0 ) 
d . cmdchat ( arg , "BINARY_Update_Mast_Timer 2|2|30" ) 
server_loop_timer ( "hydra_zone_check" , 1 , arg ) 
else 
d . setf ( arg , "second" , sec - 1 ) 
local minutes = math . floor ( tonumber ( sec ) / 60 ) 
local seconds = math . floor ( tonumber ( sec ) - ( tonumber ( minutes ) * 60 ) ) 
d . cmdchat ( arg , string . format ( "BINARY_Update_Mast_Timer 4|%d|%d" , minutes , seconds ) ) 
end 
elseif s == 2 then 
local sec = d . getf ( arg , "second" ) 
if sec == 0 then 
clear_server_timer ( "hydra_zone_check" , arg ) 
d . clear_regen ( arg ) 
hydra_zone . spawndoors ( arg , 0 ) 
d . kill_all_monstershydra ( arg ) 
d . notice ( arg , 1235 , "" , true ) 
d . cmdchat ( arg , "BINARY_Update_Mast_Timer 2|0|0" ) 
server_timer ( "hydra_zone_warp" , 3 , arg ) 
else 
d . setf ( arg , "second" , sec - 1 ) 
if sec == 148 then 
d . set_regen_file ( arg , "data/dungeon/hydra/regen1.txt" ) 
end 
local minutes = math . floor ( tonumber ( sec ) / 60 ) 
local seconds = math . floor ( tonumber ( sec ) - ( tonumber ( minutes ) * 60 ) ) 
d . cmdchat ( arg , string . format ( "BINARY_Update_Mast_Timer 2|%d|%d" , minutes , seconds ) ) 
end 
elseif s == 3 then 
local sec = d . getf ( arg , "second" ) 
if sec == 0 then 
clear_server_timer ( "hydra_zone_check" , arg ) 
d . setf ( arg , "step" , 4 ) 
d . notice ( arg , 1236 , "" , true ) 
hydra_zone . purgedoors ( arg , 0 ) 
d . cmdchat ( arg , "BINARY_Update_Mast_Timer 4|0|0" ) 
server_loop_timer ( "hydra_zone_check" , 1 , arg ) 
else 
d . setf ( arg , "second" , sec - 1 ) 
local minutes = math . floor ( tonumber ( sec ) / 60 ) 
local seconds = math . floor ( tonumber ( sec ) - ( tonumber ( minutes ) * 60 ) ) 
d . cmdchat ( arg , string . format ( "BINARY_Update_Mast_Timer 4|%d|%d" , minutes , seconds ) ) 
end 
elseif s == 4 then 
clear_server_timer ( "hydra_zone_check" , arg ) 
d . setf ( arg , "step" , 5 ) 
d . spawn_mob ( arg , 3956 , 385 , 411 , 180 ) 
d . set_regen_file ( arg , "data/dungeon/hydra/regen1.txt" ) 
d . cmdchat ( arg , "BINARY_Update_Mast_Timer 7" ) 
elseif s == 8 then 
local sec = d . getf ( arg , "second" ) 
if sec == 0 then 
clear_server_timer ( "hydra_zone_check" , arg ) 
d . setf ( arg , "step" , 9 ) 
d . setf ( arg , "second" , 89 ) 
d . notice ( arg , 1234 , "" , true ) 
hydra_zone . purgedoors ( arg , 0 ) 
d . cmdchat ( arg , "BINARY_Update_Mast_Timer 2|1|30" ) 
server_loop_timer ( "hydra_zone_check" , 1 , arg ) 
else 
d . setf ( arg , "second" , sec - 1 ) 
local minutes = math . floor ( tonumber ( sec ) / 60 ) 
local seconds = math . floor ( tonumber ( sec ) - ( tonumber ( minutes ) * 60 ) ) 
d . cmdchat ( arg , string . format ( "BINARY_Update_Mast_Timer 4|%d|%d" , minutes , seconds ) ) 
end 
elseif s == 9 then 
local sec = d . getf ( arg , "second" ) 
if sec == 0 then 
clear_server_timer ( "hydra_zone_check" , arg ) 
d . setf ( arg , "step" , 10 ) 
d . purge_vid ( d . getf ( arg , "boss_vid2" ) ) 
d . spawn_mob ( arg , 3961 , 384 , 374 , 360 ) 
d . cmdchat ( arg , "BINARY_Update_Mast_Timer 0" ) 
else 
d . setf ( arg , "second" , sec - 1 ) 
if sec == 88 then 
d . set_regen_file ( arg , "data/dungeon/hydra/regen2.txt" ) 
end 
local minutes = math . floor ( tonumber ( sec ) / 60 ) 
local seconds = math . floor ( tonumber ( sec ) - ( tonumber ( minutes ) * 60 ) ) 
d . cmdchat ( arg , string . format ( "BINARY_Update_Mast_Timer 2|%d|%d" , minutes , seconds ) ) 
end 
elseif s == 13 then 
local sec = d . getf ( arg , "second" ) 
if sec == 0 then 
clear_server_timer ( "hydra_zone_check" , arg ) 
d . setf ( arg , "step" , 14 ) 
d . setf ( arg , "second" , 89 ) 
d . notice ( arg , 1232 , "" , true ) 
hydra_zone . purgedoors ( arg , 0 ) 
d . cmdchat ( arg , "BINARY_Update_Mast_Timer 4|0|0" ) 
server_loop_timer ( "hydra_zone_check" , 1 , arg ) 
else 
d . setf ( arg , "second" , sec - 1 ) 
local minutes = math . floor ( tonumber ( sec ) / 60 ) 
local seconds = math . floor ( tonumber ( sec ) - ( tonumber ( minutes ) * 60 ) ) 
d . cmdchat ( arg , string . format ( "BINARY_Update_Mast_Timer 4|%d|%d" , minutes , seconds ) ) 
end 
elseif s == 14 then 
local sec = d . getf ( arg , "second" ) 
if sec == 0 then 
clear_server_timer ( "hydra_zone_check" , arg ) 
d . setf ( arg , "step" , 15 ) 
d . purge_vid ( d . getf ( arg , "boss_vid3" ) ) 
hydra_zone . purgedoors ( arg , 1 ) 
local vid = d . spawn_mob ( arg , 3962 , 384 , 374 , 360 ) 
d . setf ( arg , "boss" , vid ) 
local success = d . set_vid_invincible ( vid , true ) 
if not success then 
hydra_zone . clear ( arg ) 
else 
d . setf ( arg , "killed" , 0 ) 
local stonepos = { 
[ 1 ] = { [ "x" ] = 400 , [ "y" ] = 387 } , 
[ 2 ] = { [ "x" ] = 400 , [ "y" ] = 416 } , 
[ 3 ] = { [ "x" ] = 369 , [ "y" ] = 416 } , 
[ 4 ] = { [ "x" ] = 369 , [ "y" ] = 387 } 
} 
for index , position in ipairs ( stonepos ) begin 
local vid = d . spawn_mob ( arg , 20432 , position [ "x" ] , position [ "y" ] ) 
end 
d . cmdchat ( arg , "BINARY_Update_Mast_Timer 3" ) 
end 
else 
d . setf ( arg , "second" , sec - 1 ) 
if sec == 88 then 
d . set_regen_file ( arg , "data/dungeon/hydra/regen3.txt" ) 
end 
local minutes = math . floor ( tonumber ( sec ) / 60 ) 
local seconds = math . floor ( tonumber ( sec ) - ( tonumber ( minutes ) * 60 ) ) 
d . cmdchat ( arg , string . format ( "BINARY_Update_Mast_Timer 2|%d|%d" , minutes , seconds ) ) 
end 
end 
else 
hydra_zone . clear ( arg ) 
end 
